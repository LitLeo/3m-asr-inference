layer_list = [
"AdaptiveAvgPool1d",
"AdaptiveAvgPool2d",
"AdaptiveAvgPool3d",
"AdaptiveMaxPool1d",
"AdaptiveMaxPool2d",
"AdaptiveMaxPool3d",
"AlphaDropout",
"AvgPool1d",
"AvgPool2d",
"AvgPool3d",
"BatchNorm1d",
"BatchNorm2d",
"BatchNorm3d",
"Bilinear",
"CELU",
"ChannelShuffle",
"ConstantPad1d",
"ConstantPad2d",
"ConstantPad3d",
"Conv1d",
"Conv2d",
"Conv3d",
"ConvTranspose1d",
"ConvTranspose2d",
"ConvTranspose3d",
"CosineSimilarity",
"Dropout",
"Dropout2d",
"Dropout3d",
"ELU",
"Embedding",
"EmbeddingBag",
"Flatten",
"Fold",
"FractionalMaxPool2d",
"FractionalMaxPool3d",
"GELU",
"GroupNorm",
"GRU",
"GRUCell",
"Hardshrink",
"Hardsigmoid",
"Hardswish",
"Hardtanh",
"Identity",
"InstanceNorm1d",
"InstanceNorm2d",
"InstanceNorm3d",
"LayerNorm",
"LazyBatchNorm1d",
"LazyBatchNorm2d",
"LazyBatchNorm3d",
"LazyConv1d",
"LazyConv2d",
"LazyConv3d",
"LazyConvTranspose1d",
"LazyConvTranspose2d",
"LazyConvTranspose3d",
"LazyLinear",
"LeakyReLU",
"Linear",
"LocalResponseNorm",
"LogSigmoid",
"LogSoftmax",
"LPPool1d",
"LPPool2d",
"LSTM",
"LSTMCell",
"MaxPool1d",
"MaxPool2d",
"MaxPool3d",
"MaxUnpool1d",
"MaxUnpool2d",
"MaxUnpool3d",
"Mish",
"MultiheadAttention",
"PairwiseDistance",
"PixelShuffle",
"PixelUnshuffle",
"PReLU",
"ReflectionPad1d",
"ReflectionPad2d",
"ReLU",
"ReLU6",
"ReplicationPad1d",
"ReplicationPad2d",
"ReplicationPad3d",
"RNN",
"RNNBase",
"RNNCell",
"RReLU",
"SELU",
"Sigmoid",
"SiLU",
"Softmax",
"Softmax2d",
"Softmin",
"Softplus",
"Softshrink",
"Softsign",
"SyncBatchNorm",
"Tanh",
"Tanhshrink",
"Threshold",
"Transformer",
"TransformerDecoder",
"TransformerDecoderLayer",
"TransformerEncoder",
"TransformerEncoderLayer",
"Unflatten",
"Unfold",
"Upsample",
"UpsamplingBilinear2d",
"UpsamplingNearest2d",
"ZeroPad2d"
]


for l in layer_list:
  print("    def add" + str(l) + "(network, layer, inputs, layer_name=None, precision=None):")
  print("        \"\"\"" + l + "\"\"\"")
  print("")
  print("        raise RuntimeError(\"nn." + str(l) + " not support!\")")
  print("")
  print("        # if precision is not None:")
  print("           # trt_layer.precision = precision")
  print("")
  print("        # if layer_name is None:")
  print("            # layer_name = \"nn." + str(l) + "\"")
  print("        # set_layer_name(network, trt_layer, layer_name)")
  print("")
  print("        # x = trt_layer.get_output(0)")
  print("")
  print("        # return [x]")
  print("")

